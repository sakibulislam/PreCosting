package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 04 14:46:38 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgPrecostingUpdateEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        OrderNumber {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getOrderNumber();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setOrderNumber((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        BpoQty {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getBpoQty();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setBpoQty((Number)value);
            }
        }
        ,
        SubCostId {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getSubCostId();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setSubCostId((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        SaleHeaderId {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getSaleHeaderId();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setSaleHeaderId((Number)value);
            }
        }
        ,
        SaleLineId {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getSaleLineId();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setSaleLineId((Number)value);
            }
        }
        ,
        HistId {
            public Object get(MnjMfgPrecostingUpdateEOImpl obj) {
                return obj.getHistId();
            }

            public void put(MnjMfgPrecostingUpdateEOImpl obj, Object value) {
                obj.setHistId((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgPrecostingUpdateEOImpl object);

        public abstract void put(MnjMfgPrecostingUpdateEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int ORDERNUMBER = AttributesEnum.OrderNumber.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int BPOQTY = AttributesEnum.BpoQty.index();
    public static final int SUBCOSTID = AttributesEnum.SubCostId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int SALEHEADERID = AttributesEnum.SaleHeaderId.index();
    public static final int SALELINEID = AttributesEnum.SaleLineId.index();
    public static final int HISTID = AttributesEnum.HistId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgPrecostingUpdateEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgPrecostingUpdateEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for OrderNumber, using the alias name OrderNumber.
     * @return the OrderNumber
     */
    public String getOrderNumber() {
        return (String)getAttributeInternal(ORDERNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderNumber.
     * @param value value to set the OrderNumber
     */
    public void setOrderNumber(String value) {
        setAttributeInternal(ORDERNUMBER, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for BpoQty, using the alias name BpoQty.
     * @return the BpoQty
     */
    public Number getBpoQty() {
        return (Number)getAttributeInternal(BPOQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BpoQty.
     * @param value value to set the BpoQty
     */
    public void setBpoQty(Number value) {
        setAttributeInternal(BPOQTY, value);
    }

    /**
     * Gets the attribute value for SubCostId, using the alias name SubCostId.
     * @return the SubCostId
     */
    public Number getSubCostId() {
        return (Number)getAttributeInternal(SUBCOSTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubCostId.
     * @param value value to set the SubCostId
     */
    public void setSubCostId(Number value) {
        setAttributeInternal(SUBCOSTID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for SaleHeaderId, using the alias name SaleHeaderId.
     * @return the SaleHeaderId
     */
    public Number getSaleHeaderId() {
        return (Number)getAttributeInternal(SALEHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleHeaderId.
     * @param value value to set the SaleHeaderId
     */
    public void setSaleHeaderId(Number value) {
        setAttributeInternal(SALEHEADERID, value);
    }

    /**
     * Gets the attribute value for SaleLineId, using the alias name SaleLineId.
     * @return the SaleLineId
     */
    public Number getSaleLineId() {
        return (Number)getAttributeInternal(SALELINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleLineId.
     * @param value value to set the SaleLineId
     */
    public void setSaleLineId(Number value) {
        setAttributeInternal(SALELINEID, value);
    }

    /**
     * Gets the attribute value for HistId, using the alias name HistId.
     * @return the HistId
     */
    public Number getHistId() {
        return (Number)getAttributeInternal(HISTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HistId.
     * @param value value to set the HistId
     */
    public void setHistId(Number value) {
        setAttributeInternal(HISTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param histId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number histId) {
        return new Key(new Object[]{histId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
