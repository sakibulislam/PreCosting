package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 22 16:09:39 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgPrecostingHImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    protected void validateEntity() {
        
    if (getStyleNo() == null && getStyleName() == null ){        
            
           
            throw new JboException("You can't leave Style Name and LA Dev. Style No both Blank, please fill any one. .");
        
      }
     super.validateEntity(); 
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        HeaderNo {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getHeaderNo();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setHeaderNo((String)value);
            }
        }
        ,
        OrderProjectionNo {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getOrderProjectionNo();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setOrderProjectionNo((Number)value);
            }
        }
        ,
        BuyerId {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getBuyerId();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        DropPeriod {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getDropPeriod();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setDropPeriod((String)value);
            }
        }
        ,
        Brand {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getBrand();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        StyleName {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getStyleName();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        StyleNo {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getStyleNo();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setStyleNo((String)value);
            }
        }
        ,
        Fit {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getFit();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setFit((String)value);
            }
        }
        ,
        EndUser {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getEndUser();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setEndUser((String)value);
            }
        }
        ,
        ItemDescription {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getItemDescription();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setItemDescription((String)value);
            }
        }
        ,
        ColourWash {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getColourWash();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setColourWash((String)value);
            }
        }
        ,
        OtherCharges {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getOtherCharges();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setOtherCharges((Number)value);
            }
        }
        ,
        LabTestCharges {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getLabTestCharges();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setLabTestCharges((Number)value);
            }
        }
        ,
        Print {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getPrint();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setPrint((Number)value);
            }
        }
        ,
        Commission {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getCommission();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setCommission((Number)value);
            }
        }
        ,
        SmsQty {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getSmsQty();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setSmsQty((Number)value);
            }
        }
        ,
        OrderQty {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getOrderQty();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setOrderQty((Number)value);
            }
        }
        ,
        CostingMou {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getCostingMou();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setCostingMou((String)value);
            }
        }
        ,
        FabricFinance {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getFabricFinance();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setFabricFinance((Number)value);
            }
        }
        ,
        TrimFinance {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getTrimFinance();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setTrimFinance((Number)value);
            }
        }
        ,
        WashFinance {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getWashFinance();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setWashFinance((Number)value);
            }
        }
        ,
        ProductionUnit {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getProductionUnit();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setProductionUnit((String)value);
            }
        }
        ,
        CmMerchandiser {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getCmMerchandiser();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setCmMerchandiser((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        ProdPerLinePerH {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getProdPerLinePerH();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setProdPerLinePerH((Number)value);
            }
        }
        ,
        Season {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getSeason();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        BpoNo {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getBpoNo();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setBpoNo((String)value);
            }
        }
        ,
        Status {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getStatus();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        GmApproval {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getGmApproval();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setGmApproval((String)value);
            }
        }
        ,
        MdApproval {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getMdApproval();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setMdApproval((String)value);
            }
        }
        ,
        CmMerchandiserD {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getCmMerchandiserD();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setCmMerchandiserD((String)value);
            }
        }
        ,
        SampleDocNo {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getSampleDocNo();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setSampleDocNo((Number)value);
            }
        }
        ,
        VersionNo {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getVersionNo();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setVersionNo((Number)value);
            }
        }
        ,
        VersionDate {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getVersionDate();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setVersionDate((Date)value);
            }
        }
        ,
        RespId {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getRespId();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setRespId((Number)value);
            }
        }
        ,
        PocType {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getPocType();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setPocType((String)value);
            }
        }
        ,
        ProdStyleNo {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getProdStyleNo();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setProdStyleNo((String)value);
            }
        }
        ,
        ProdCostLinePerH {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getProdCostLinePerH();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setProdCostLinePerH((Number)value);
            }
        }
        ,
        StyleNameNew {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getStyleNameNew();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setStyleNameNew((String)value);
            }
        }
        ,
        Division {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getDivision();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setDivision((String)value);
            }
        }
        ,
        BpoQty {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getBpoQty();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setBpoQty((String)value);
            }
        }
        ,
        TotalBpoTbaQty {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getTotalBpoTbaQty();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setTotalBpoTbaQty((String)value);
            }
        }
        ,
        TransferStatus {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getTransferStatus();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setTransferStatus((String)value);
            }
        }
        ,
        AgencyCommission {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getAgencyCommission();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setAgencyCommission((String)value);
            }
        }
        ,
        CmCalculation {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getCmCalculation();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setCmCalculation((String)value);
            }
        }
        ,
        StyleTracking {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getStyleTracking();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setStyleTracking((String)value);
            }
        }
        ,
        ItemPurchaseType {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getItemPurchaseType();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setItemPurchaseType((String)value);
            }
        }
        ,
        MnjMfgPrecostingL {
            public Object get(MnjMfgPrecostingHImpl obj) {
                return obj.getMnjMfgPrecostingL();
            }

            public void put(MnjMfgPrecostingHImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgPrecostingHImpl object);

        public abstract void put(MnjMfgPrecostingHImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int HEADERNO = AttributesEnum.HeaderNo.index();
    public static final int ORDERPROJECTIONNO = AttributesEnum.OrderProjectionNo.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int DROPPERIOD = AttributesEnum.DropPeriod.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int STYLENO = AttributesEnum.StyleNo.index();
    public static final int FIT = AttributesEnum.Fit.index();
    public static final int ENDUSER = AttributesEnum.EndUser.index();
    public static final int ITEMDESCRIPTION = AttributesEnum.ItemDescription.index();
    public static final int COLOURWASH = AttributesEnum.ColourWash.index();
    public static final int OTHERCHARGES = AttributesEnum.OtherCharges.index();
    public static final int LABTESTCHARGES = AttributesEnum.LabTestCharges.index();
    public static final int PRINT = AttributesEnum.Print.index();
    public static final int COMMISSION = AttributesEnum.Commission.index();
    public static final int SMSQTY = AttributesEnum.SmsQty.index();
    public static final int ORDERQTY = AttributesEnum.OrderQty.index();
    public static final int COSTINGMOU = AttributesEnum.CostingMou.index();
    public static final int FABRICFINANCE = AttributesEnum.FabricFinance.index();
    public static final int TRIMFINANCE = AttributesEnum.TrimFinance.index();
    public static final int WASHFINANCE = AttributesEnum.WashFinance.index();
    public static final int PRODUCTIONUNIT = AttributesEnum.ProductionUnit.index();
    public static final int CMMERCHANDISER = AttributesEnum.CmMerchandiser.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int PRODPERLINEPERH = AttributesEnum.ProdPerLinePerH.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int BPONO = AttributesEnum.BpoNo.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int GMAPPROVAL = AttributesEnum.GmApproval.index();
    public static final int MDAPPROVAL = AttributesEnum.MdApproval.index();
    public static final int CMMERCHANDISERD = AttributesEnum.CmMerchandiserD.index();
    public static final int SAMPLEDOCNO = AttributesEnum.SampleDocNo.index();
    public static final int VERSIONNO = AttributesEnum.VersionNo.index();
    public static final int VERSIONDATE = AttributesEnum.VersionDate.index();
    public static final int RESPID = AttributesEnum.RespId.index();
    public static final int POCTYPE = AttributesEnum.PocType.index();
    public static final int PRODSTYLENO = AttributesEnum.ProdStyleNo.index();
    public static final int PRODCOSTLINEPERH = AttributesEnum.ProdCostLinePerH.index();
    public static final int STYLENAMENEW = AttributesEnum.StyleNameNew.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int BPOQTY = AttributesEnum.BpoQty.index();
    public static final int TOTALBPOTBAQTY = AttributesEnum.TotalBpoTbaQty.index();
    public static final int TRANSFERSTATUS = AttributesEnum.TransferStatus.index();
    public static final int AGENCYCOMMISSION = AttributesEnum.AgencyCommission.index();
    public static final int CMCALCULATION = AttributesEnum.CmCalculation.index();
    public static final int STYLETRACKING = AttributesEnum.StyleTracking.index();
    public static final int ITEMPURCHASETYPE = AttributesEnum.ItemPurchaseType.index();
    public static final int MNJMFGPRECOSTINGL = AttributesEnum.MnjMfgPrecostingL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgPrecostingHImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgPrecostingH");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for HeaderNo, using the alias name HeaderNo.
     * @return the HeaderNo
     */
    public String getHeaderNo() {
        return (String)getAttributeInternal(HEADERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderNo.
     * @param value value to set the HeaderNo
     */
    public void setHeaderNo(String value) {
        setAttributeInternal(HEADERNO, value);
    }

    /**
     * Gets the attribute value for OrderProjectionNo, using the alias name OrderProjectionNo.
     * @return the OrderProjectionNo
     */
    public Number getOrderProjectionNo() {
        return (Number)getAttributeInternal(ORDERPROJECTIONNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderProjectionNo.
     * @param value value to set the OrderProjectionNo
     */
    public void setOrderProjectionNo(Number value) {
        setAttributeInternal(ORDERPROJECTIONNO, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for DropPeriod, using the alias name DropPeriod.
     * @return the DropPeriod
     */
    public String getDropPeriod() {
        return (String)getAttributeInternal(DROPPERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for DropPeriod.
     * @param value value to set the DropPeriod
     */
    public void setDropPeriod(String value) {
        setAttributeInternal(DROPPERIOD, value.trim());
    }

    /**
     * Gets the attribute value for Brand, using the alias name Brand.
     * @return the Brand
     */
    public String getBrand() {
        return (String)getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brand.
     * @param value value to set the Brand
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for StyleName, using the alias name StyleName.
     * @return the StyleName
     */
    public String getStyleName() {
        return (String)getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleName.
     * @param value value to set the StyleName
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for StyleNo, using the alias name StyleNo.
     * @return the StyleNo
     */
    public String getStyleNo() {
        return (String)getAttributeInternal(STYLENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleNo.
     * @param value value to set the StyleNo
     */
    public void setStyleNo(String value) {
        setAttributeInternal(STYLENO, value.trim());
    }

    /**
     * Gets the attribute value for Fit, using the alias name Fit.
     * @return the Fit
     */
    public String getFit() {
        return (String)getAttributeInternal(FIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fit.
     * @param value value to set the Fit
     */
    public void setFit(String value) {
        setAttributeInternal(FIT, value);
    }

    /**
     * Gets the attribute value for EndUser, using the alias name EndUser.
     * @return the EndUser
     */
    public String getEndUser() {
        return (String)getAttributeInternal(ENDUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndUser.
     * @param value value to set the EndUser
     */
    public void setEndUser(String value) {
        setAttributeInternal(ENDUSER, value);
    }

    /**
     * Gets the attribute value for ItemDescription, using the alias name ItemDescription.
     * @return the ItemDescription
     */
    public String getItemDescription() {
        return (String)getAttributeInternal(ITEMDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemDescription.
     * @param value value to set the ItemDescription
     */
    public void setItemDescription(String value) {
        setAttributeInternal(ITEMDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ColourWash, using the alias name ColourWash.
     * @return the ColourWash
     */
    public String getColourWash() {
        return (String)getAttributeInternal(COLOURWASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ColourWash.
     * @param value value to set the ColourWash
     */
    public void setColourWash(String value) {
        setAttributeInternal(COLOURWASH, value);
    }

    /**
     * Gets the attribute value for OtherCharges, using the alias name OtherCharges.
     * @return the OtherCharges
     */
    public Number getOtherCharges() {
        return (Number)getAttributeInternal(OTHERCHARGES);
    }

    /**
     * Sets <code>value</code> as the attribute value for OtherCharges.
     * @param value value to set the OtherCharges
     */
    public void setOtherCharges(Number value) {
        setAttributeInternal(OTHERCHARGES, value);
    }

    /**
     * Gets the attribute value for LabTestCharges, using the alias name LabTestCharges.
     * @return the LabTestCharges
     */
    public Number getLabTestCharges() {
        return (Number)getAttributeInternal(LABTESTCHARGES);
    }

    /**
     * Sets <code>value</code> as the attribute value for LabTestCharges.
     * @param value value to set the LabTestCharges
     */
    public void setLabTestCharges(Number value) {
        setAttributeInternal(LABTESTCHARGES, value);
    }

    /**
     * Gets the attribute value for Print, using the alias name Print.
     * @return the Print
     */
    public Number getPrint() {
        return (Number)getAttributeInternal(PRINT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Print.
     * @param value value to set the Print
     */
    public void setPrint(Number value) {
        setAttributeInternal(PRINT, value);
    }

    /**
     * Gets the attribute value for Commission, using the alias name Commission.
     * @return the Commission
     */
    public Number getCommission() {
        return (Number)getAttributeInternal(COMMISSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Commission.
     * @param value value to set the Commission
     */
    public void setCommission(Number value) {
        setAttributeInternal(COMMISSION, value);
    }

    /**
     * Gets the attribute value for SmsQty, using the alias name SmsQty.
     * @return the SmsQty
     */
    public Number getSmsQty() {
        return (Number)getAttributeInternal(SMSQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SmsQty.
     * @param value value to set the SmsQty
     */
    public void setSmsQty(Number value) {
        setAttributeInternal(SMSQTY, value);
    }

    /**
     * Gets the attribute value for OrderQty, using the alias name OrderQty.
     * @return the OrderQty
     */
    public Number getOrderQty() {
        return (Number)getAttributeInternal(ORDERQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderQty.
     * @param value value to set the OrderQty
     */
    public void setOrderQty(Number value) {
        setAttributeInternal(ORDERQTY, value);
    }

    /**
     * Gets the attribute value for CostingMou, using the alias name CostingMou.
     * @return the CostingMou
     */
    public String getCostingMou() {
        return (String)getAttributeInternal(COSTINGMOU);
    }

    /**
     * Sets <code>value</code> as the attribute value for CostingMou.
     * @param value value to set the CostingMou
     */
    public void setCostingMou(String value) {
        setAttributeInternal(COSTINGMOU, value);
    }

    /**
     * Gets the attribute value for FabricFinance, using the alias name FabricFinance.
     * @return the FabricFinance
     */
    public Number getFabricFinance() {
        return (Number)getAttributeInternal(FABRICFINANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FabricFinance.
     * @param value value to set the FabricFinance
     */
    public void setFabricFinance(Number value) {
        setAttributeInternal(FABRICFINANCE, value);
    }

    /**
     * Gets the attribute value for TrimFinance, using the alias name TrimFinance.
     * @return the TrimFinance
     */
    public Number getTrimFinance() {
        return (Number)getAttributeInternal(TRIMFINANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrimFinance.
     * @param value value to set the TrimFinance
     */
    public void setTrimFinance(Number value) {
        setAttributeInternal(TRIMFINANCE, value);
    }

    /**
     * Gets the attribute value for WashFinance, using the alias name WashFinance.
     * @return the WashFinance
     */
    public Number getWashFinance() {
        return (Number)getAttributeInternal(WASHFINANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashFinance.
     * @param value value to set the WashFinance
     */
    public void setWashFinance(Number value) {
        setAttributeInternal(WASHFINANCE, value);
    }

    /**
     * Gets the attribute value for ProductionUnit, using the alias name ProductionUnit.
     * @return the ProductionUnit
     */
    public String getProductionUnit() {
        return (String)getAttributeInternal(PRODUCTIONUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductionUnit.
     * @param value value to set the ProductionUnit
     */
    public void setProductionUnit(String value) {
        setAttributeInternal(PRODUCTIONUNIT, value);
    }

    /**
     * Gets the attribute value for CmMerchandiser, using the alias name CmMerchandiser.
     * @return the CmMerchandiser
     */
    public String getCmMerchandiser() {
        return (String)getAttributeInternal(CMMERCHANDISER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CmMerchandiser.
     * @param value value to set the CmMerchandiser
     */
    public void setCmMerchandiser(String value) {
        setAttributeInternal(CMMERCHANDISER, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ProdPerLinePerH, using the alias name ProdPerLinePerH.
     * @return the ProdPerLinePerH
     */
    public Number getProdPerLinePerH() {
        return (Number)getAttributeInternal(PRODPERLINEPERH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdPerLinePerH.
     * @param value value to set the ProdPerLinePerH
     */
    public void setProdPerLinePerH(Number value) {
        setAttributeInternal(PRODPERLINEPERH, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value.trim());
    }

    /**
     * Gets the attribute value for BpoNo, using the alias name BpoNo.
     * @return the BpoNo
     */
    public String getBpoNo() {
        return (String)getAttributeInternal(BPONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BpoNo.
     * @param value value to set the BpoNo
     */
    public void setBpoNo(String value) {
        setAttributeInternal(BPONO, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for GmApproval, using the alias name GmApproval.
     * @return the GmApproval
     */
    public String getGmApproval() {
        return (String)getAttributeInternal(GMAPPROVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for GmApproval.
     * @param value value to set the GmApproval
     */
    public void setGmApproval(String value) {
        setAttributeInternal(GMAPPROVAL, value);
    }

    /**
     * Gets the attribute value for MdApproval, using the alias name MdApproval.
     * @return the MdApproval
     */
    public String getMdApproval() {
        return (String)getAttributeInternal(MDAPPROVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MdApproval.
     * @param value value to set the MdApproval
     */
    public void setMdApproval(String value) {
        setAttributeInternal(MDAPPROVAL, value);
    }

    /**
     * Gets the attribute value for CmMerchandiserD, using the alias name CmMerchandiserD.
     * @return the CmMerchandiserD
     */
    public String getCmMerchandiserD() {
        return (String)getAttributeInternal(CMMERCHANDISERD);
    }

    /**
     * Sets <code>value</code> as the attribute value for CmMerchandiserD.
     * @param value value to set the CmMerchandiserD
     */
    public void setCmMerchandiserD(String value) {
        setAttributeInternal(CMMERCHANDISERD, value);
    }

    /**
     * Gets the attribute value for SampleDocNo, using the alias name SampleDocNo.
     * @return the SampleDocNo
     */
    public Number getSampleDocNo() {
        return (Number)getAttributeInternal(SAMPLEDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SampleDocNo.
     * @param value value to set the SampleDocNo
     */
    public void setSampleDocNo(Number value) {
        setAttributeInternal(SAMPLEDOCNO, value);
    }

    /**
     * Gets the attribute value for VersionNo, using the alias name VersionNo.
     * @return the VersionNo
     */
    public Number getVersionNo() {
        return (Number)getAttributeInternal(VERSIONNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionNo.
     * @param value value to set the VersionNo
     */
    public void setVersionNo(Number value) {
        setAttributeInternal(VERSIONNO, value);
    }

    /**
     * Gets the attribute value for VersionDate, using the alias name VersionDate.
     * @return the VersionDate
     */
    public Date getVersionDate() {
        return (Date)getAttributeInternal(VERSIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionDate.
     * @param value value to set the VersionDate
     */
    public void setVersionDate(Date value) {
        setAttributeInternal(VERSIONDATE, value);
    }

    /**
     * Gets the attribute value for RespId, using the alias name RespId.
     * @return the RespId
     */
    public Number getRespId() {
        return (Number)getAttributeInternal(RESPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RespId.
     * @param value value to set the RespId
     */
    public void setRespId(Number value) {
        setAttributeInternal(RESPID, value);
    }

    /**
     * Gets the attribute value for PocType, using the alias name PocType.
     * @return the PocType
     */
    public String getPocType() {
        return (String)getAttributeInternal(POCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PocType.
     * @param value value to set the PocType
     */
    public void setPocType(String value) {
        setAttributeInternal(POCTYPE, value);
    }

    /**
     * Gets the attribute value for ProdStyleNo, using the alias name ProdStyleNo.
     * @return the ProdStyleNo
     */
    public String getProdStyleNo() {
        return (String)getAttributeInternal(PRODSTYLENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdStyleNo.
     * @param value value to set the ProdStyleNo
     */
    public void setProdStyleNo(String value) {
        setAttributeInternal(PRODSTYLENO, value.trim());
    }

    /**
     * Gets the attribute value for ProdCostLinePerH, using the alias name ProdCostLinePerH.
     * @return the ProdCostLinePerH
     */
    public Number getProdCostLinePerH() {
        return (Number)getAttributeInternal(PRODCOSTLINEPERH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdCostLinePerH.
     * @param value value to set the ProdCostLinePerH
     */
    public void setProdCostLinePerH(Number value) {
        setAttributeInternal(PRODCOSTLINEPERH, value);
    }

    /**
     * Gets the attribute value for StyleNameNew, using the alias name StyleNameNew.
     * @return the StyleNameNew
     */
    public String getStyleNameNew() {
        return (String)getAttributeInternal(STYLENAMENEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleNameNew.
     * @param value value to set the StyleNameNew
     */
    public void setStyleNameNew(String value) {
        setAttributeInternal(STYLENAMENEW, value.trim());
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the Division
     */
    public String getDivision() {
        return (String)getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for BpoQty, using the alias name BpoQty.
     * @return the BpoQty
     */
    public String getBpoQty() {
        return (String)getAttributeInternal(BPOQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BpoQty.
     * @param value value to set the BpoQty
     */
    public void setBpoQty(String value) {
        setAttributeInternal(BPOQTY, value);
    }

    /**
     * Gets the attribute value for TotalBpoTbaQty, using the alias name TotalBpoTbaQty.
     * @return the TotalBpoTbaQty
     */
    public String getTotalBpoTbaQty() {
        return (String)getAttributeInternal(TOTALBPOTBAQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalBpoTbaQty.
     * @param value value to set the TotalBpoTbaQty
     */
    public void setTotalBpoTbaQty(String value) {
        setAttributeInternal(TOTALBPOTBAQTY, value);
    }

    /**
     * Gets the attribute value for TransferStatus, using the alias name TransferStatus.
     * @return the TransferStatus
     */
    public String getTransferStatus() {
        return (String)getAttributeInternal(TRANSFERSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransferStatus.
     * @param value value to set the TransferStatus
     */
    public void setTransferStatus(String value) {
        setAttributeInternal(TRANSFERSTATUS, value);
    }

    /**
     * Gets the attribute value for AgencyCommission, using the alias name AgencyCommission.
     * @return the AgencyCommission
     */
    public String getAgencyCommission() {
        return (String)getAttributeInternal(AGENCYCOMMISSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgencyCommission.
     * @param value value to set the AgencyCommission
     */
    public void setAgencyCommission(String value) {
        setAttributeInternal(AGENCYCOMMISSION, value);
    }

    /**
     * Gets the attribute value for CmCalculation, using the alias name CmCalculation.
     * @return the CmCalculation
     */
    public String getCmCalculation() {
        return (String)getAttributeInternal(CMCALCULATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for CmCalculation.
     * @param value value to set the CmCalculation
     */
    public void setCmCalculation(String value) {
        setAttributeInternal(CMCALCULATION, value);
    }

    /**
     * Gets the attribute value for StyleTracking, using the alias name StyleTracking.
     * @return the StyleTracking
     */
    public String getStyleTracking() {
        return (String)getAttributeInternal(STYLETRACKING);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleTracking.
     * @param value value to set the StyleTracking
     */
    public void setStyleTracking(String value) {
        setAttributeInternal(STYLETRACKING, value);
    }

    /**
     * Gets the attribute value for ItemPurchaseType, using the alias name ItemPurchaseType.
     * @return the ItemPurchaseType
     */
    public String getItemPurchaseType() {
        return (String)getAttributeInternal(ITEMPURCHASETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemPurchaseType.
     * @param value value to set the ItemPurchaseType
     */
    public void setItemPurchaseType(String value) {
        setAttributeInternal(ITEMPURCHASETYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgPrecostingL() {
        return (RowIterator)getAttributeInternal(MNJMFGPRECOSTINGL);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl(" MNJ_MFG_PRECOSTING_H_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);       
        
        /**
         * Set created by 
         * */
        Map sessionScope = ADFContext.getCurrent().getSessionScope();   
        String var = (String)sessionScope.get("userIdS");
        System.out.println("Session user Id = "+var);
        try {
            setCreatedBy(new oracle.jbo.domain.Number(var));
        } catch (SQLException e) {
            ;
        }
        }
        public int getSrNoString() {
          int srno = 0;
          String stmt = "BEGIN :1 := cust_mnj_ont_pkg.cust_mnj_precosting_srno; end;";
          java.sql.CallableStatement cs =   getDBTransaction().createCallableStatement(stmt, 1);
          try {
              cs.registerOutParameter(1, oracle.jdbc.OracleTypes.VARCHAR);
              cs.execute();
              srno = cs.getInt(1);
              cs.close();
          } catch (Exception e) {
              e.printStackTrace();
          }
          return srno;
        }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
//    public void lock() {
//        super.lock();
//    }
     public void lock() {
        try {
            super.lock();
        } catch (oracle.jbo.RowInconsistentException e) {
            if (e.getErrorCode().equals("25014")) {
                super.lock();
            } else
                throw e;
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
     
        String user =null ;
        String respId = null;
     
        try {   
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            user = (String)sessionScope.get("userIdS");
            respId = (String)sessionScope.get("respIdS");
            //respIdS
        }catch(Exception ee) {
              ;  
        }
        if(DML_UPDATE == operation){
            try {
                setLastUpdatedDate((Date)Date.getCurrentDate()); 
                setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                setRespId(new oracle.jbo.domain.Number(respId));
            } catch (SQLException f) {
                System.out.println(f.getMessage());
            }
        }
        else if (DML_INSERT == operation){
            System.out.println("Document No-->"+String.valueOf(getSrNoString()));
            setHeaderNo(String.valueOf(getSrNoString()));
            try {
                setCreatedBy(new oracle.jbo.domain.Number(user));
                setCreationDate((Date)Date.getCurrentDate());    
                setRespId(new oracle.jbo.domain.Number(respId));
            } catch (SQLException f) {
                ;
            }
        }
        super.doDML(operation, e);
      
    }
}
