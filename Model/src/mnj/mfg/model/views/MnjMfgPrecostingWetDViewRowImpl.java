package mnj.mfg.model.views;

import mnj.mfg.model.entities.MnjMfgPrecostingWetDImpl;

import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 24 12:54:30 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgPrecostingWetDViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CostAmount {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getCostAmount();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setCostAmount((Number)value);
            }
        }
        ,
        DetailId {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getDetailId();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        ManualPrice {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getManualPrice();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setManualPrice((Number)value);
            }
        }
        ,
        ProcessId {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getProcessId();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setProcessId((Number)value);
            }
        }
        ,
        ProcessName {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getProcessName();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setProcessName((String)value);
            }
        }
        ,
        Profit {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getProfit();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setProfit((Number)value);
            }
        }
        ,
        Total {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getTotal();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setTotal((Number)value);
            }
        }
        ,
        NewTotalVal {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getNewTotalVal();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setNewTotalVal((Number)value);
            }
        }
        ,
        GrandTotal {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getGrandTotal();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setGrandTotal((Number)value);
            }
        }
        ,
        CostUom {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getCostUom();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setCostUom((String)value);
            }
        }
        ,
        CostingUOMLov1 {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getCostingUOMLov1();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WashProcessWetVO1 {
            public Object get(MnjMfgPrecostingWetDViewRowImpl obj) {
                return obj.getWashProcessWetVO1();
            }

            public void put(MnjMfgPrecostingWetDViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgPrecostingWetDViewRowImpl object);

        public abstract void put(MnjMfgPrecostingWetDViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COSTAMOUNT = AttributesEnum.CostAmount.index();
    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int MANUALPRICE = AttributesEnum.ManualPrice.index();
    public static final int PROCESSID = AttributesEnum.ProcessId.index();
    public static final int PROCESSNAME = AttributesEnum.ProcessName.index();
    public static final int PROFIT = AttributesEnum.Profit.index();
    public static final int TOTAL = AttributesEnum.Total.index();
    public static final int NEWTOTALVAL = AttributesEnum.NewTotalVal.index();
    public static final int GRANDTOTAL = AttributesEnum.GrandTotal.index();
    public static final int COSTUOM = AttributesEnum.CostUom.index();
    public static final int COSTINGUOMLOV1 = AttributesEnum.CostingUOMLov1.index();
    public static final int WASHPROCESSWETVO1 = AttributesEnum.WashProcessWetVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgPrecostingWetDViewRowImpl() {
    }

    /**
     * Gets MnjMfgPrecostingWetD entity object.
     * @return the MnjMfgPrecostingWetD
     */
    public MnjMfgPrecostingWetDImpl getMnjMfgPrecostingWetD() {
        return (MnjMfgPrecostingWetDImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for COST_AMOUNT using the alias name CostAmount.
     * @return the COST_AMOUNT
     */
    public Number getCostAmount() {
        return (Number) getAttributeInternal(COSTAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for COST_AMOUNT using the alias name CostAmount.
     * @param value value to set the COST_AMOUNT
     */
    public void setCostAmount(Number value) {
        setAttributeInternal(COSTAMOUNT, value);
    }

    /**
     * Gets the attribute value for DETAIL_ID using the alias name DetailId.
     * @return the DETAIL_ID
     */
    public Number getDetailId() {
        return (Number) getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as attribute value for DETAIL_ID using the alias name DetailId.
     * @param value value to set the DETAIL_ID
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public Number getLineId() {
        return (Number) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for MANUAL_PRICE using the alias name ManualPrice.
     * @return the MANUAL_PRICE
     */
    public Number getManualPrice() {
        return (Number) getAttributeInternal(MANUALPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for MANUAL_PRICE using the alias name ManualPrice.
     * @param value value to set the MANUAL_PRICE
     */
    public void setManualPrice(Number value) {
        setAttributeInternal(MANUALPRICE, value);
    }

    /**
     * Gets the attribute value for PROCESS_ID using the alias name ProcessId.
     * @return the PROCESS_ID
     */
    public Number getProcessId() {
        return (Number) getAttributeInternal(PROCESSID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROCESS_ID using the alias name ProcessId.
     * @param value value to set the PROCESS_ID
     */
    public void setProcessId(Number value) {
        setAttributeInternal(PROCESSID, value);
    }

    /**
     * Gets the attribute value for PROCESS_NAME using the alias name ProcessName.
     * @return the PROCESS_NAME
     */
    public String getProcessName() {
        return (String) getAttributeInternal(PROCESSNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PROCESS_NAME using the alias name ProcessName.
     * @param value value to set the PROCESS_NAME
     */
    public void setProcessName(String value) {
        setAttributeInternal(PROCESSNAME, value);
    }

    /**
     * Gets the attribute value for PROFIT using the alias name Profit.
     * @return the PROFIT
     */
    public Number getProfit() {
        return (Number) getAttributeInternal(PROFIT);
    }

    /**
     * Sets <code>value</code> as attribute value for PROFIT using the alias name Profit.
     * @param value value to set the PROFIT
     */
    public void setProfit(Number value) {
        setAttributeInternal(PROFIT, value);
    }

    /**
     * Gets the attribute value for TOTAL using the alias name Total.
     * @return the TOTAL
     */
    public Number getTotal() {
        return (Number) getAttributeInternal(TOTAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL using the alias name Total.
     * @param value value to set the TOTAL
     */
    public void setTotal(Number value) {
        setAttributeInternal(TOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NewTotalVal.
     * @return the NewTotalVal
     */
    public Number getNewTotalVal() {
        return (Number) getAttributeInternal(NEWTOTALVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NewTotalVal.
     * @param value value to set the  NewTotalVal
     */
    public void setNewTotalVal(Number value) {
        setAttributeInternal(NEWTOTALVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GrandTotal.
     * @return the GrandTotal
     */
    public Number getGrandTotal() {
        
       return (Number) getAttributeInternal(GRANDTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GrandTotal.
     * @param value value to set the  GrandTotal
     */
    public void setGrandTotal(Number value) {
        setAttributeInternal(GRANDTOTAL, value);
    }

    /**
     * Gets the attribute value for COST_UOM using the alias name CostUom.
     * @return the COST_UOM
     */
    public String getCostUom() {
        return (String) getAttributeInternal(COSTUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for COST_UOM using the alias name CostUom.
     * @param value value to set the COST_UOM
     */
    public void setCostUom(String value) {
        setAttributeInternal(COSTUOM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CostingUOMLov1.
     */
    public RowSet getCostingUOMLov1() {
        return (RowSet)getAttributeInternal(COSTINGUOMLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WashProcessWetVO1.
     */
    public RowSet getWashProcessWetVO1() {
        return (RowSet)getAttributeInternal(WASHPROCESSWETVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
